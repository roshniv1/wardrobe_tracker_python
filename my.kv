
WindowManager:
    MainWindow:
        name: "Main"
        id: main
    AddWindow:
        name: "Add"
        id: add
    ImageWindow:
        name: "Image"
        id: image
    ConfirmWindow:
        name: "Confirm"
        id: confirm


<MainWindow>:
    MDToolbar:
        title: "Wardrobe Tracker"
        size_hint:1,0.1
        pos_hint:{'top':1}
        right_action_items:
            [('filter', lambda x: root.filter_category()),
            ('plus', lambda x: root.manager.switch_to(root.manager.ids.add, direction = 'left'))]
    MDToolbar:
        title: app.title
        type: "bottom"
        mode: "free-end"
        icon: ""
    ScrollView:
        pos_hint:{'top':0.9}
        size_hint:1,0.79
        do_scroll_x: False
        GridLayout:
            id: container
            cols: 2
            spacing: 0,50
            mipmap: True
            row_default_height:
                (self.width - self.cols*self.spacing[0])/self.cols
            row_force_default: True
            size_hint_y: None
            height: self.minimum_height


<AddWindow>:
    name: "Add"
    MDToolbar:
        size_hint:1,0.1
        pos_hint:{'top':1}
        left_action_items:
            [('arrow-left', lambda x: root.manager.switch_to(root.manager.ids.main, direction = 'right'))]
        right_action_items:
            [('camera', lambda x: root.manager.switch_to(root.manager.ids.image, direction = 'left'))]
    MDTextField:
        id: wardrobe_item
        pos_hint: {"top": 0.85, "center_x": 0.5}
        size_hint: 0.9,None
        helper_text: "Name your wardrobe item and select category"
        helper_text_mode: "persistent"
    MDDropDownItem:
        id: wardrobe_category
        pos_hint: {"top":0.5, "center_x": 0.5}
        items: root.manager.category
        dropdown_bg: [1, 1, 1, 1]
        dropdown_width_mult : 4
    Button:
        text: "Add"
        pos_hint: {"top":0.1}
        size_hint: 1,0.1
        on_press: root.add_item(wardrobe_item.text, wardrobe_category.current_item)


<ImageWindow>:

    Camera:
        id: camera
        resolution: (640, 480)
        size_hint: None,None
        size: dp(500),dp(500)
        center: self.size and root.center
        allow_stretch: True
        play: True
        canvas.before:
            PushMatrix
            Rotate:
                angle: -90
                origin: self.center
        canvas.after:
            PopMatrix

    MDToolbar:
        size_hint:1,0.1
        pos_hint:{'top':1}
        left_action_items:
            [('arrow-left', lambda x: root.manager.switch_to(root.manager.ids.add, direction = 'right'))]

    MDToolbar:
        id: cam_toolbar
        icon: "circle"
        type: "bottom"
        on_md_bg_color: (0.4, 0.4, 0.4, 1)

    MDFloatingActionButton:
        elevation_normal: 8
        icon: ''
        pos_hint: {"top": 0.08, "center_x": 0.5}
        size_hint: None,None
        size: dp(50),dp(50)
        on_press: root.capture()
        md_bg_color: (0, 0, 0, 1)


<ConfirmWindow>:
    on_pre_enter: display_image.source = root.manager.ids.image.image_id
    Image:
        id: display_image
        pos_hint:{'top': 1}
    MDToolbar:
        size_hint:1,0.1
        pos_hint:{'top':1}
        left_action_items:
            [('arrow-left', lambda x: root.manager.switch_to(root.manager.ids.image, direction = 'right'))]
        right_action_items:
            [('check', lambda x: root.manager.switch_to(root.manager.ids.add, direction = 'right'))]
